import pandas as pd
import streamlit as st
import json
from finder_class import Finder, sample_object


with open("data/featureset.json", "rb") as file:
    input_data = json.load(file)

display_dict = json.load(open('data/display_dict.json', 'r'))
feature_dict = json.load(open('data/full_features_dict.json', 'r'))
finder_instance = Finder(feature_dict, display_dict)
st.header("–ü–æ–∏—Å–∫–æ–≤–∏–∫ –ø–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º —Ä–∞—Å—Ç–µ–Ω–∏—è–º")
st.subheader("üë®‚Äçüåæ –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å")
st.markdown("–ü—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π cls_token, –≤ —Ä–∞–º–∫–∞—Ö –∫–µ–π—Å–∞ **–û–û–û ¬´–°–û–õ–Æ–®–ù¬ª** —Ö–∞–∫–∞—Ç–æ–Ω–∞ \"–¶–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ä—ã–≤. –°–µ–∑–æ–Ω: –ò–ò\"")

options = st.multiselect(
    "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ (GEO)",
    input_data["location_feature"],
    [], max_selections=5)

options1 = st.selectbox(
    '–ö–ª–∏–º–∞—Ç',
    input_data["climate_feature"],
    )
options2 = st.selectbox(
    '–ü–æ—á–≤–∞',
    input_data["pochva_feature"],
    )
options3 = st.multiselect(
    '–•–∏–º–∏—á–µ—Å–∫–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ –≤ —Ä–∞—Å—Ç–µ–Ω–∏–∏',
    input_data["chemicals_feature"],
    [], max_selections=5)
options4 = st.checkbox('–û—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫—Ä–∞—Å–Ω–æ–π –∫–Ω–∏–≥–æ–π')

find_button = st.button("–ù–∞–π—Ç–∏")



entity_attribures = {"location_feature": list(options),
                     "climate_feature": list(options1),
                     "red_book_feature": "1" if options4 else  [],
                     "chemicals_feature": list(options3),
                     "pochva_feature": list(options2)}
st.divider()
if find_button:
    st.subheader("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç")
    result = finder_instance.search(entity_attribures)

    for x in result:
        with st.expander(x["original_name"]):
            st.write("–ê—Ç—Ä–∏–±—É—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞")

            col1, col2, col3, col4, col5 = st.columns(5)

            with col1:
                st.table(pd.DataFrame(x["entity_attributes"]["location_feature"],columns=["location_feature"]))
            with col2:
                st.table(pd.DataFrame(x["entity_attributes"]["climate_feature"], columns=["climate_feature"]))
            with col3:
                st.table(pd.DataFrame(x["entity_attributes"]["pochva_feature"], columns=["pochva_feature"]))
            with col4:
                st.table(pd.DataFrame(x["entity_attributes"]["chemicals_feature"], columns=["chemicals_feature"]))
            with col5:
                st.table( pd.DataFrame(x["entity_attributes"]["red_book_feature"], columns=["red_book_feature"]))
            st.caption(x["entity_definition"])
else:
    st.write("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞–π—Ç–∏\"")



st.caption("Powered by cls_token")


